LIST P = 16F887
INCLUDE <P16F887.INC>
__CONFIG _CONFIG1,0XE032
__CONFIG _CONFIG2,0XFEFF
CBLOCK 0X20
    CONTA
    CONTB
    CONTC
    D1
    D2
    D3
 ENDC
 ORG 0X00
 ;----------------- CONFIGURACION REGISTRO --------------
 INICIA 
    BANKSEL  ANSEL
    CLRF     ANSEL
    CLRF     ANSELH

    BANKSEL TRISC
    MOVLW H'00'
    MOVWF TRISC
    BANKSEL TRISD
    MOVLW H'00'
    MOVWF TRISD
    
    BANKSEL PORTC ; ME POSICIONO EN LOS PUERTOS
    BANKSEL PORTD ; ME POSICIONO EN LOS PUERTOS
;------------------COMIENZO DE MIS INSTRUCCIONES----------------
MAIN
    MOVLW H'FF'
    MOVWF CONTA
    MOVLW H'FF'
    MOVWF CONTB
    MOVLW H'FF'
    MOVWF CONTC
    
FOR1
    CALL SECUENCIA_HOLA
    DECFSZ CONTA
    GOTO FOR1
    
FOR2
   CALL SECUENCIA_BEBE
    ;CALL SECUENCIA_POZA
    DECFSZ CONTB
    GOTO FOR2
    
FOR3
    ;CALL SECUENCIA_RICA
    DECFSZ CONTC
    GOTO FOR3
    
GOTO MAIN ; se retorna al MAIN

SECUENCIA_HOLA
    MOVLW H'01'
    MOVWF PORTD
    CALL SECUENCIA_H
    CALL RET_0001
    CALL SEC_APAGADO_DIG
    
    MOVLW H'02'
    MOVWF PORTD
    CALL SECUENCIA_O
    CALL RET_0001
    CALL SEC_APAGADO_DIG
    
    MOVLW H'04'
    MOVWF PORTD
    CALL SECUENCIA_L
    CALL RET_0001
    CALL SEC_APAGADO_DIG
    
    MOVLW H'08'
    MOVWF PORTD
    CALL SECUENCIA_A
    CALL RET_0001
    
    CALL SEC_APAGADO_DIG
    
    RETURN
SECUENCIA_POZA
    MOVLW H'01'
    MOVWF PORTD
    CALL SECUENCIA_P
    CALL RET_0001
    CALL SEC_APAGADO_DIG
    
    MOVLW H'02'
    MOVWF PORTD
    CALL SECUENCIA_O
    CALL RET_0001
    CALL SEC_APAGADO_DIG
    
    MOVLW H'04'
    MOVWF PORTD
    CALL SECUENCIA_Z
    CALL RET_0001
    CALL SEC_APAGADO_DIG
    
    MOVLW H'08'
    MOVWF PORTD
    CALL SECUENCIA_A
    CALL RET_0001
    
    CALL SEC_APAGADO_DIG
    
    RETURN

SECUENCIA_RICA
    MOVLW H'01'
    MOVWF PORTD
    CALL SECUENCIA_A
    CALL RET_0001
    CALL SEC_APAGADO_DIG
    
    MOVLW H'02'
    MOVWF PORTD
    CALL SECUENCIA_I
    CALL RET_0001
    CALL SEC_APAGADO_DIG
    
    MOVLW H'04'
    MOVWF PORTD
    CALL SECUENCIA_C
    CALL RET_0001
    CALL SEC_APAGADO_DIG
    
    MOVLW H'08'
    MOVWF PORTD
    CALL SECUENCIA_A
    CALL RET_0001
    
    CALL SEC_APAGADO_DIG
    
    RETURN
   
    
    SECUENCIA_BEBE
    MOVLW H'01'
    MOVWF PORTD
    CALL SECUENCIA_B
    CALL RET_0001
    
    CALL SEC_APAGADO_DIG
    
    MOVLW H'02'
    MOVWF PORTD
    CALL SECUENCIA_E
    CALL RET_0001
    
    CALL SEC_APAGADO_DIG
     MOVLW H'04'
    MOVWF PORTD
    CALL SECUENCIA_B
    CALL RET_0001
    
    CALL SEC_APAGADO_DIG
    
    MOVLW H'08'
    MOVWF PORTD
    CALL SECUENCIA_E
    CALL RET_0001
    
    CALL SEC_APAGADO_DIG
    RETURN
SEC_APAGADO_LED
    MOVLW H'FF'
    MOVWF PORTC
    RETURN
SEC_APAGADO_DIG
    MOVLW H'FF'
    MOVWF PORTD
    RETURN
SECUENCIA_H
    MOVLW H'89'
    MOVWF PORTC
    CALL RET_0001
    RETURN
SECUENCIA_O
    MOVLW H'C0'
    MOVWF PORTC
    CALL RET_0001
    RETURN
SECUENCIA_L
    MOVLW H'C7'
    MOVWF PORTC
    CALL RET_0001
    RETURN
SECUENCIA_A
    MOVLW H'88'
    MOVWF PORTC
    CALL RET_0001
    RETURN
SECUENCIA_P
    MOVLW H'8C'
    MOVWF PORTC
    CALL RET_0001
    RETURN
SECUENCIA_Z
    MOVLW H'A4'
    MOVWF PORTC
    CALL RET_0001
    RETURN
SECUENCIA_I
    MOVLW H'CF'
    MOVWF PORTC
    CALL RET_0001
    RETURN
SECUENCIA_C
    MOVLW H'C6'
    MOVWF PORTC
    CALL RET_0001
    RETURN
    
SECUENCIA_B
    MOVLW H'FF'
    MOVFW PORTC
    CALL RET_0001
    RETURN
    
 SECUENCIA_E
    MOVLW H'79'
    MOVFW PORTC
    CALL RET_0001
    RETURN
 
;RETARDO DE 50MS  
RET_50MS 
				     ;749992 CYCLES
    MOVLW    0x85
    MOVWF    D1
    MOVLW    0XA3
    MOVWF    D2
    MOVLW    0X02
    MOVWF    D3
DELAY_0
    DECFSZ   D1,F
    GOTO     $+2
    DECFSZ   D2,F
	GOTO     $+2
	DECFSZ   D3,F
    GOTO     DELAY_0
                     ;4 CYCLES
    GOTO     $+1
    GOTO     $+1
					 ;4 CYCLES (INCLUDING CALL)
    RETURN
DELAY_10MS
			;499994 cycles
	movlw	0x03
	movwf	D1
	movlw	0x18
	movwf	D2
	movlw	0x02
	movwf	D3
DELAY_10MS_0
	decfsz	D1, f
	goto	$+2
	decfsz	D2, f
	goto	$+2
	decfsz	D3, f
	goto	DELAY_10MS_0
			;2 cycles
	goto	$+1
			;4 cycles (including call)
	return

RET_0001
			;496 cycles
	movlw	0xA5
	movwf	D1
RET_0001_0
	decfsz	D1, f
	goto	RET_0001_0
			;4 cycles (including call)
	return
	END
